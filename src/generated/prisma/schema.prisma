generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cineproductions {
  id           Int           @id @default(autoincrement())
  title        String?       @db.VarChar(150)
  release_date Int?
  nationality  String?       @db.VarChar(100)
  idiom_id     Int?
  genre_id     Int?
  directors    String?       @db.VarChar(250)
  type_id      Int?
  genres       genres?       @relation(fields: [genre_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_genre")
  idioms       idioms?       @relation(fields: [idiom_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_idiom")
  types        types?        @relation(fields: [type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_type")
  film_genero  film_genero[]
}

model film_genero {
  cineproductions_id Int
  genero_id          Int
  cineproductions    cineproductions @relation(fields: [cineproductions_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_film")
  genres             genres          @relation(fields: [genero_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_genero")

  @@id([cineproductions_id, genero_id], map: "pk_film_genero")
}

model genres {
  id              Int               @id @default(autoincrement())
  name            String?           @db.VarChar(100)
  cineproductions cineproductions[]
  film_genero     film_genero[]
}

model idioms {
  id              Int               @id @default(autoincrement())
  name            String?           @db.VarChar(200)
  cineproductions cineproductions[]
}

model types {
  id              Int               @id @default(autoincrement())
  name            String?           @db.VarChar(100)
  cineproductions cineproductions[]
}
